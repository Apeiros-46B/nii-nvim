diff --git a/ftplugin/java.lua b/ftplugin/java.lua
new file mode 100644
index 0000000..0fcd609
--- /dev/null
+++ b/ftplugin/java.lua
@@ -0,0 +1,69 @@
+-- See `:help vim.lsp.start_client` for an overview of the supported `config` options.
+local project_name = vim.fn.fnamemodify(vim.fn.getcwd(), ':p:h:t')
+
+local home = os.getenv("HOME")
+local jdtls_install_dir = home .. '/.local/share/nvim/lspservers/jdt-language-server/'
+
+local workspace_dir = home .. '/.local/share/nvim/lspservers/jdt-language-server/data/' .. project_name
+
+local config = {
+
+  -- The command that starts the language server
+  -- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line
+  cmd = {
+
+    'java', -- or '/path/to/java11_or_newer/bin/java'
+            -- depends on if `java` is in your $PATH env variable and if it points to the right version.
+
+    '-Declipse.application=org.eclipse.jdt.ls.core.id1',
+    '-Dosgi.bundles.defaultStartLevel=4',
+    '-Declipse.product=org.eclipse.jdt.ls.core.product',
+    '-Dlog.protocol=true',
+    '-Dlog.level=ALL',
+    '-Xms1g',
+    '--add-modules=ALL-SYSTEM',
+    '--add-opens', 'java.base/java.util=ALL-UNNAMED',
+    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
+
+    '-jar', jdtls_install_dir .. 'plugins/org.eclipse.equinox.launcher_1.6.400.v20210924-0641.jar',
+         -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                       ^^^^^^^^^^^^^^
+         -- Must point to the                                                     Change this to
+         -- eclipse.jdt.ls installation                                           the actual version
+
+
+    '-configuration', jdtls_install_dir .. '/config_linux',
+                    -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ^^^^^^
+                    -- Must point to the                      Change to one of `linux`, `win` or `mac`
+                    -- eclipse.jdt.ls installation            Depending on your system.
+
+
+    -- See `data directory configuration` section in the README
+    '-data', workspace_dir
+  },
+
+  -- This is the default if not provided, you can remove it. Or adjust as needed.
+  -- One dedicated LSP server & client will be started per unique root_dir
+  root_dir = require('jdtls.setup').find_root({'.git', 'mvnw', 'gradlew'}),
+
+  -- Here you can configure eclipse.jdt.ls specific settings
+  -- See https://github.com/eclipse/eclipse.jdt.ls/wiki/Running-the-JAVA-LS-server-from-the-command-line#initialize-request
+  -- for a list of options
+  settings = {
+    java = {
+    }
+  },
+
+  -- Language server `initializationOptions`
+  -- You need to extend the `bundles` with paths to jar files
+  -- if you want to use additional eclipse.jdt.ls plugins.
+  --
+  -- See https://github.com/mfussenegger/nvim-jdtls#java-debug-installation
+  --
+  -- If you don't plan on using the debugger or other eclipse.jdt.ls plugins you can remove this
+  init_options = {
+    bundles = {}
+  },
+}
+-- This starts a new client & server,
+-- or attaches to an existing client & server depending on the `root_dir`.
+require('jdtls').start_or_attach(config)
diff --git a/lua/config/plug/dashboard.lua b/lua/config/plug/dashboard.lua
index 0c1ffab..f69758a 100644
--- a/lua/config/plug/dashboard.lua
+++ b/lua/config/plug/dashboard.lua
@@ -1,37 +1,38 @@
 local g = vim.g
 
 g.dashboard_default_executive = 'telescope'
-g.dashboard_diable_statusline = 1
+g.dashboard_disable_statusline = 0
 
 g.dashboard_custom_header = {
-	'┍━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┑',
-	'│ ⣇⣿⠘⣿⣿⣿⡿⡿⣟⣟⢟⢟⢝⠵⡝⣿⡿⢂⣼⣿⣷⣌⠩⡫⡻⣝⠹⢿⣿⣷ │',
-	'│ ⡆⣿⣆⠱⣝⡵⣝⢅⠙⣿⢕⢕⢕⢕⢝⣥⢒⠅⣿⣿⣿⡿⣳⣌⠪⡪⣡⢑⢝⣇ │',
-	'│ ⡆⣿⣿⣦⠹⣳⣳⣕⢅⠈⢗⢕⢕⢕⢕⢕⢈⢆⠟⠋⠉⠁⠉⠉⠁⠈⠼⢐⢕⢽ │',
-	'│ ⡗⢰⣶⣶⣦⣝⢝⢕⢕⠅⡆⢕⢕⢕⢕⢕⣴⠏⣠⡶⠛⡉⡉⡛⢶⣦⡀⠐⣕⢕ │',
-	'│ ⡝⡄⢻⢟⣿⣿⣷⣕⣕⣅⣿⣔⣕⣵⣵⣿⣿⢠⣿⢠⣮⡈⣌⠨⠅⠹⣷⡀⢱⢕ │',
-	'│ ⡝⡵⠟⠈⢀⣀⣀⡀⠉⢿⣿⣿⣿⣿⣿⣿⣿⣼⣿⢈⡋⠴⢿⡟⣡⡇⣿⡇⡀⢕ │',
-	'│ ⡝⠁⣠⣾⠟⡉⡉⡉⠻⣦⣻⣿⣿⣿⣿⣿⣿⣿⣿⣧⠸⣿⣦⣥⣿⡇⡿⣰⢗⢄ │',
-	'│ ⠁⢰⣿⡏⣴⣌⠈⣌⠡⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣬⣉⣉⣁⣄⢖⢕⢕⢕ │',
-	'│ ⡀⢻⣿⡇⢙⠁⠴⢿⡟⣡⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣵⣵⣿ │',
-	'│ ⡻⣄⣻⣿⣌⠘⢿⣷⣥⣿⠇⣿⣿⣿⣿⣿⣿⠛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ │',
-	'│ ⣷⢄⠻⣿⣟⠿⠦⠍⠉⣡⣾⣿⣿⣿⣿⣿⣿⢸⣿⣦⠙⣿⣿⣿⣿⣿⣿⣿⣿⠟ │',
-	'│ ⡕⡑⣑⣈⣻⢗⢟⢞⢝⣻⣿⣿⣿⣿⣿⣿⣿⠸⣿⠿⠃⣿⣿⣿⣿⣿⣿⡿⠁⣠ │',
-	'│ ⡝⡵⡈⢟⢕⢕⢕⢕⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⠿⠋⣀⣈⠙ │',
-	'│ ⡝⡵⡕⡀⠑⠳⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⢉⡠⡲⡫⡪⡪⡣ │',
-	'┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┙',
+'┍━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┑',
+'│ ⠀⠀⣀⠔⠉⠀⠀⠀⠀⠀⣀⡀⠀⢀⠀⠀⠀⠁⠀⠀⠀⠀⢀⣀⣀⣰⣁⠴⣧⠴⠷⠖⠒⠒⣲⠞ │',
+'│ ⣠⠞⡁⠀⠀⠀⠀⢀⡤⠊⠀⠹⡆⠈⢦⠀⠀⢀⣤⣤⣬⣯⣥⣄⣠⡗⠁⠀⢁⠀⠀⠀⢀⠞⠁⠀ │',
+'│ ⢁⠀⡄⠀⠀⣠⡔⠡⣤⠄⠂⠂⠉⠀⣈⣃⣀⡠⡦⠤⠦⠀⢳⡀⡹⠋⢉⡽⠋⠀⢀⡔⠁⠀⡀⠐ │',
+'│ ⣤⠾⠗⠒⢉⠀⢀⣴⠉⠀⠀⠀⠀⠈⢿⡉⠉⠃⢸⠘⠋⠎⠀⣹⠃⡴⠋⠀⢀⡴⠋⠀⠐⠂⠀⠠ │',
+'│ ⣷⡶⢀⣶⣧⣠⣾⢿⣧⡀⠀⠀⠀⠠⣌⣷⡀⠀⠀⢇⠌⠀⡰⣡⠞⣷⠀⡠⠊⠀⠀⠀⠀⠀⡀⠀ │',
+'│ ⣿⣶⣿⣿⣿⣿⠟⢇⠻⣷⡴⢦⣀⠀⠀⢻⢿⡦⠀⠎⡀⣠⠞⠁⠀⠘⠊⠀⢄⠀⠀⢀⣠⠞⢀⠀ │',
+'│ ⣿⣿⡟⣿⣿⢫⣴⠁⠀⢸⣿⡄⡀⢹⠆⣠⡎⢹⣞⢈⡿⠁⠀⠀⠀⢀⣠⡠⠴⠿⢟⡿⠿⢶⡿⢤ │',
+'│ ⣮⡙⣿⡿⢡⣏⠸⠀⠀⡼⠈⢿⡖⢋⠞⠁⢰⠎⠙⠋⣠⡀⠀⠀⢀⡏⢁⣤⠄⢠⠞⠻⣶⣦⣵⣼ │',
+'│ ⣿⣿⣿⣧⡀⠉⠁⡐⣾⢇⡰⣋⢿⣇⠀⠀⠀⡀⠀⡀⠁⣸⣶⣾⠋⢸⣠⢏⡴⠃⠀⠐⠛⠻⢯⣉ │',
+'│ ⣾⣿⠈⣿⣿⡳⣶⣿⡧⠋⠰⠃⠀⢻⣧⠀⠈⣉⡾⠀⠶⢚⣿⠁⠰⣿⣧⠜⠁⢠⣤⣀⣶⣂⣈⠻ │',
+'│ ⢯⣘⣷⣿⣿⣿⣿⡛⢿⣄⠠⠒⢈⡠⠻⣷⣡⠏⠀⠀⣸⡟⢻⣀⡌⣸⡿⣦⠐⠻⡿⠟⠉⠁⠀⠠ │',
+'│ ⠤⠽⢿⣿⣿⣿⡟⣿⢚⣿⣦⠔⠏⠐⠀⠽⣿⡀⠀⠀⠉⠉⠙⠃⢰⡿⠀⠈⢳⣄⠀⠀⠀⢀⠀⠀ │',
+'│ ⣀⣀⣂⣈⣯⣈⣛⣦⣀⣙⢿⣧⣄⠊⣲⣁⣘⣷⣀⢀⠤⢁⡴⠃⣾⠉⠀⠀⠀⠈⠢⡀⠀⢀⡄⠀ │',
+'│ ⣻⣟⡛⠛⢛⠻⣛⠛⠛⠋⠀⠻⣧⡐⠛⠛⠛⠛⢻⠏⢠⠊⠀⢸⡏⠀⠀⢨⠧⡀⠀⠹⣎⠀⢸⠆ │',
+'│ ⣿⣿⣧⣶⢿⡷⠋⢢⡄⠀⠀⠀⠹⣷⡄⢀⡴⢃⣫⡨⠚⣿⠀⣾⣀⡀⠀⠿⠀⠛⢦⡄⠈⠳⡀⠀ │',
+'│ ⣿⣻⣿⣷⠈⣿⠆⢀⠘⣴⣿⣦⡀⠙⣿⣾⣿⣟⣸⢉⣥⡿⢤⣽⠉⠉⣉⠉⠛⠖⠦⠹⣄⢠⣽⣆ │',
+'┕━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┙',
 }
 
 g.dashboard_custom_section = {
 	a = { description = { '  Find File                        ' }, command = 'Telescope find_files' },
-	b = { description = { '  Recents                          ' }, command = 'Telescope oldfiles' },
-	c = { description = { '  Find Word                        ' }, command = 'Telescope live_grep' },
-	d = { description = { 'ﱐ  New File                         ' }, command = 'DashboardNewFile' },
+	b = { description = { '  Recents                          ' }, command = 'Telescope oldfiles' },
+	c = { description = { '  Find Word                        ' }, command = 'Telescope live_grep' },
+	d = { description = { '  New File                         ' }, command = 'DashboardNewFile' },
 	e = { description = { '  Bookmarks                        ' }, command = 'Telescope marks' },
 	f = { description = { '  Open Help Doc                    ' }, command = 'view ~/.config/nvim/doc/helpdoc.md' },
 }
 
 g.dashboard_custom_footer = {
-	'	',
-	'▷ nii-nvim ◁',
+	'[ nii-nvim ]',
 }
diff --git a/lua/config/plug/hexokinase.lua b/lua/config/plug/hexokinase.lua
new file mode 100644
index 0000000..bf7b314
--- /dev/null
+++ b/lua/config/plug/hexokinase.lua
@@ -0,0 +1,22 @@
+local g = vim.g
+
+-- Highlighting type
+g.Hexokinase_highlighters = {
+  'virtual', -- Square after the color
+  -- 'sign_column', -- Square in the gutter/sign column
+  -- 'background', -- Highlight background of the #
+  -- 'backgroundfull', -- Highlight entire background
+  -- 'foreground', -- Highlight foreground of the #
+  'foregroundfull' -- Highlight entire foreground
+}
+
+-- Patterns to match for all filetypes
+g.Hexokinase_optInPatterns = {
+    'full_hex',
+    'triple_hex',
+    'rgb',
+    'rgba',
+    'hsl',
+    'hsla',
+    -- 'colour_names'
+}
diff --git a/lua/config/plug/init.lua b/lua/config/plug/init.lua
index f527277..008e746 100644
--- a/lua/config/plug/init.lua
+++ b/lua/config/plug/init.lua
@@ -15,8 +15,10 @@ return {
 	require('config.plug.autopairs'),
 	require('config.plug.telescope'),
 	require('config.plug.nvimcomment'),
-	require('config.plug.nvimcolorizer'),
+    require('config.plug.hexokinase'),
+	-- require('config.plug.nvimcolorizer'),
 	require('config.plug.treesitter'),
+    require('config.plug.presence')
 }
 
 -- # vim foldmethod=marker
diff --git a/lua/config/plug/lspkind.lua b/lua/config/plug/lspkind.lua
index 8832d25..9bcf14f 100644
--- a/lua/config/plug/lspkind.lua
+++ b/lua/config/plug/lspkind.lua
@@ -9,7 +9,7 @@ require('lspkind').init({
     -- 'codicons' for codicon preset (requires vscode-codicons font)
     --
     -- default: 'default'
-    preset = 'codicons',
+    preset = 'default',
 
     -- override preset symbols
     --
@@ -51,11 +51,11 @@ formatting = {
 
     -- set a name for each source
     vim_item.menu = ({
-      buffer = "「Buffer」",
-      text = "「Text」",
-      nvim_lsp = "「Lsp」",
-      ultisnips = "「UltiSnips」",
-      nvim_lua = "「Lua」",
+      buffer = " ",
+      text = " ",
+      nvim_lsp = " 擄",
+      ultisnips = " ",
+      nvim_lua = " ",
     })[entry.source.name]
     return vim_item
   end,
diff --git a/lua/config/plug/lualine.lua b/lua/config/plug/lualine.lua
index 07b7e5b..fe66584 100644
--- a/lua/config/plug/lualine.lua
+++ b/lua/config/plug/lualine.lua
@@ -20,11 +20,11 @@ require('lualine').setup({
 		theme = lualine_theme,
 	},
 	sections = {
-		lualine_a = { 'mode' },
-		lualine_b = { 'branch' },
-		lualine_c = { 'filename' },
-		lualine_x = { 'encoding', 'fileformat', 'filetype' },
-		lualine_y = { 'progress' },
-		lualine_z = { 'location' },
+		lualine_a = { { 'mode', icon = '' } },
+		lualine_b = { { 'branch', icon = '' }, { 'filename', icon = '' } },
+		lualine_c = { 'filetype' },
+		lualine_x = { 'fileformat' },
+		lualine_y = { { 'encoding', icon = '' } },
+		lualine_z = { 'progress', 'location' },
 	},
 })
diff --git a/lua/config/plug/nvimtree.lua b/lua/config/plug/nvimtree.lua
index 8395ad4..8f235a5 100644
--- a/lua/config/plug/nvimtree.lua
+++ b/lua/config/plug/nvimtree.lua
@@ -1,14 +1,11 @@
 local g = vim.g
 
 g.nvim_tree_auto_ignore_ft = { 'startify', 'dashboard' }
-g.nvim_tree_quit_on_open = 0
-g.nvim_tree_indent_markers = 1
 g.nvim_tree_git_hl = 1
 g.nvim_tree_highlight_opened_files = 1
 g.nvim_tree_root_folder_modifier = ':~'
 g.nvim_tree_add_trailing = 1
 g.nvim_tree_group_empty = 1
-g.nvim_tree_disable_window_picker = 0
 g.nvim_tree_icon_padding = ' '
 g.nvim_tree_symlink_arrow = ' >> '
 g.nvim_tree_show_icons = {
@@ -18,15 +15,15 @@ g.nvim_tree_show_icons = {
 }
 
 require'nvim-tree'.setup {
-  disable_netrw       = true,
-  hijack_netrw        = true,
-  open_on_setup       = false,
-  ignore_ft_on_setup  = {},
-  auto_close          = false,
-  open_on_tab         = false,
-  hijack_cursor       = false,
-  update_cwd          = false,
-  update_to_buf_dir   = {
+  disable_netrw         = true,
+  hijack_netrw          = true,
+  open_on_setup         = false,
+  ignore_ft_on_setup    = {},
+  auto_close            = false,
+  open_on_tab           = false,
+  hijack_cursor         = false,
+  update_cwd            = false,
+  update_to_buf_dir     = {
     enable = true,
     auto_open = true,
   },
diff --git a/lua/config/plug/presence.lua b/lua/config/plug/presence.lua
new file mode 100644
index 0000000..bcdc570
--- /dev/null
+++ b/lua/config/plug/presence.lua
@@ -0,0 +1,22 @@
+require("presence"):setup({
+    -- General options
+    auto_update         = true,                       -- Update activity based on autocmd events (if `false`, map or manually execute `:lua package.loaded.presence:update()`)
+    neovim_image_text   = "The One True Text Editor", -- Text displayed when hovered over the Neovim image
+    main_image          = "file",                     -- Main image display (either "neovim" or "file")
+    client_id           = "793271441293967371",       -- Use your own Discord application client id (not recommended)
+    log_level           = nil,                        -- Log messages at or above this level (one of the following: "debug", "info", "warn", "error")
+    debounce_timeout    = 10,                         -- Number of seconds to debounce events (or calls to `:lua package.loaded.presence:update(<filename>, true)`)
+    enable_line_number  = false,                      -- Displays the current line number instead of the current project
+    blacklist           = {},                         -- A list of strings or Lua patterns that disable Rich Presence if the current file name, path, or workspace matches
+    buttons             = true,                       -- Configure Rich Presence button(s), either a boolean to enable/disable, a static table (`{{ label = "<label>", url = "<url>" }, ...}`, or a function(buffer: string, repo_url: string|nil): table)
+    file_assets         = {},                         -- Custom file asset definitions keyed by file names and extensions (see default config at `lua/presence/file_assets.lua` for reference)
+
+    -- Rich Presence text options
+    editing_text        = "Editing %s",               -- Format string rendered when an editable file is loaded in the buffer (either string or function(filename: string): string)
+    file_explorer_text  = "Browsing %s",              -- Format string rendered when browsing a file explorer (either string or function(file_explorer_name: string): string)
+    git_commit_text     = "Committing changes",       -- Format string rendered when committing changes in git (either string or function(filename: string): string)
+    plugin_manager_text = "Managing plugins",         -- Format string rendered when managing plugins (either string or function(plugin_manager_name: string): string)
+    reading_text        = "Reading %s",               -- Format string rendered when a read-only or unmodifiable file is loaded in the buffer (either string or function(filename: string): string)
+    workspace_text      = "Working on %s",            -- Format string rendered when in a git repository (either string or function(project_name: string|nil, filename: string): string)
+    line_number_text    = "Line %s out of %s",        -- Format string rendered when `enable_line_number` is set to true (either string or function(line_number: number, line_count: number): string)
+})
diff --git a/lua/config/plug/tabline.lua b/lua/config/plug/tabline.lua
index c3e5fa6..2fbaf10 100644
--- a/lua/config/plug/tabline.lua
+++ b/lua/config/plug/tabline.lua
@@ -9,7 +9,7 @@ require('tabline').setup({
 		section_separators = { scheme.tabline_style_left, scheme.tabline_style_right },
 		component_separators = { scheme.tabline_seperator_left, scheme.tabline_seperator_right },
 		max_bufferline_percent = 66, -- set to nil by default, and it uses vim.o.columns * 2/3
-		show_tabs_always = false, -- this shows tabs only when there are more than one tab or if the first tab is named
+		show_tabs_always = true, -- this shows tabs only when there are more than one tab or if the first tab is named
 		show_devicons = true, -- this shows devicons in buffer section
 		show_bufnr = false, -- this appends [bufnr] to buffer section,
 		show_filename_only = true, -- shows base filename only instead of relative path in filename
diff --git a/lua/config/plug/telescope.lua b/lua/config/plug/telescope.lua
index 9fb5ec4..263221c 100644
--- a/lua/config/plug/telescope.lua
+++ b/lua/config/plug/telescope.lua
@@ -1,20 +1,20 @@
 require('telescope').setup({
 	defaults = {
 		prompt_prefix = '=> ',
-		selection_caret = ' > ',
+		selection_caret = '>- ',
 		entry_prefix = '   ',
-		-- borderchars = { '═', '│', '═', '│', '╒', '╕', '╛', '╘' },
-		sorting_strategy = "ascending",
+		borderchars = { '━', '┃', '━', '┃', '┏', '┓', '┛', '┗' },
+		sorting_strategy = "descending",
 
-		layout_strategy = 'bottom_pane',
-		layout_config = {
-			height = 25,
-		},
-		borderchars = {
-			prompt = { '═', ' ', ' ', ' ', '═', '═', ' ', ' ' },
-			results = { ' ' },
-			preview = { ' ', ' ', ' ', '│', '│', ' ', ' ', '│' },
-		},
+		-- layout_strategy = 'center',
+		-- layout_config = {
+			-- height = 25,
+		-- },
+		-- borderchars = {
+			-- prompt = { '━', '┃', ' ', '┃', '┣', '┫', ' ', ' ' },
+			-- results = { '━', '┃', '━', '┃', '┣', '┫', '┛', '┗' },
+			-- preview = { '━', '┃', ' ', '┃', '┏', '┓', '┃', '┃' },
+		-- },
 	},
 	extensions = {
 		fzf = {
diff --git a/lua/config/plug/treesitter.lua b/lua/config/plug/treesitter.lua
index f5cce4c..8f1761d 100644
--- a/lua/config/plug/treesitter.lua
+++ b/lua/config/plug/treesitter.lua
@@ -1,6 +1,6 @@
 require('nvim-treesitter.configs').setup({
 	-- One of "all", "maintained" (parsers with maintainers), or a list of languages
-	ensure_installed = 'maintained',
+	ensure_installed = { 'lua', 'java', 'go', 'rust', 'c', 'cpp', 'julia', 'haskell' },
 
 	-- Install languages synchronously (only applied to `ensure_installed`)
 	sync_install = false,
diff --git a/lua/keymap.lua b/lua/keymap.lua
index f0da320..5702849 100644
--- a/lua/keymap.lua
+++ b/lua/keymap.lua
@@ -34,18 +34,26 @@ local M = {}
 -- {{{ misc bindings
 vim.g.mapleader = ' ' -- Map leader key to space
 vim.g.maplocalleader = ','
-map('n', '<C-n>', ':set rnu!<CR>', opt) -- toggle relative line numbers
+
+map('n', '<leader>', ':WhichKey \'<Space>\'<CR>', { noremap = true, silent = true }) -- which key
+map('n', '<leader>R', ':set rnu!<CR>', opt) -- toggle relative line numbers
 map('', '<C-c>', ':CommentToggle<CR>', opt) -- toggle comment on current line or selection
-map('', '<C-t>', ':NvimTreeToggle<CR>', opt) -- toggle nvimtree
+map('', '<leader>/', ':CommentToggle<CR>', opt) -- toggle comment on current line or selection
+map('', '<C-n>', ':NvimTreeToggle<CR>', opt) -- toggle nvimtree
 map('n', '<leader>nf', ':Neoformat<CR>', { noremap = true }) -- format current buffer with neoformat
 map('n', '<leader>~', ':Dashboard<CR>', opt) -- map show dashboard
 
 -- clipboard mappings
 map('n', '<leader>ya', ':%y+<CR>', opt) -- Copy content of entire buffer to system clipboard
 map('n', '<leader>yl', '"+yy', opt) -- yank current line into system clipboard
+map('', '<leader>y',  '"+y', opt) -- yank selection into system clipboard
+
+-- write and quit shortcuts
+map('n', 'WW', ':w<CR>', opt)
+map('n', 'WWQ', ':wqa<CR>', opt)
 
--- write buffer changes
-map('n', 'WW', ":w<CR>", opt)
+-- glow
+map('n', '<leader>p', ':Glow<CR>', opt)
 -- }}}
 
 -- {{{ autocompletion mappings for cmp
@@ -111,10 +119,11 @@ map('t', '<C-esc>', '<C-\\><C-n>', opt)
 
 -- {{{ telescope pullup
 map('n', '<leader>ff', ':Telescope find_files<CR>', { noremap = true })
+map('n', '<leader>fr', ':Telescope oldfiles<CR>', { noremap = true })
 map('n', '<leader>fw', ':Telescope live_grep<CR>', { noremap = true })
-map('n', '<leader>fg', ':Telescope git_commits<CR>', { noremap = true })
-map('n', '<leader>fG', ':Telescope git_branches<CR>', { noremap = true })
-map('n', '<leader>fe', ':lua require(\'telescope.builtin\').symbols({ sources = { \'kaomoji\'}})<CR>', { noremap = true })
+map('n', '<leader>gc', ':Telescope git_commits<CR>', { noremap = true })
+map('n', '<leader>gB', ':Telescope git_branches<CR>', { noremap = true })
+map('n', '<leader>s', ':Telescope buffers<CR>', opt)
 -- }}}
 
 -- {{{ hop.nvim
@@ -129,7 +138,14 @@ map('n', '<leader>an', ':HopLineStart<CR>', opt)
 map('n', '<leader>af', ':HopWordCurrentLine<CR>', opt)
 -- }}}
 
-map('n', '<leader>s', ':Telescope buffers<CR>', opt)
+-- {{{ jdtls
+map('n', '<A-o>', ':lua require(\'jdtls\').organize_imports()<CR>', opt)
+map('n', '<leader>ev', '<Cmd>lua require(\'jdtls\').extract_variable()<CR>', opt)
+map('v', '<leader>ev', '<Esc><Cmd>lua require(\'jdtls\').extract_variable(true)<CR>', opt)
+map('n', '<leader>ec', '<Cmd>lua require(\'jdtls\').extract_constant()<CR>', opt)
+map('v', '<leader>ec', '<Esc><Cmd>lua require(\'jdtls\').extract_constant(true)<CR>', opt)
+map('v', '<leader>em', '<Esc><Cmd>lua require(\'jdtls\').extract_method(true)<CR>', opt)
+-- }}}
 
 -- returns any externally-required keymaps for usage
 return M
diff --git a/lua/lib/scheme.lua b/lua/lib/scheme.lua
index 95b4730..9410237 100644
--- a/lua/lib/scheme.lua
+++ b/lua/lib/scheme.lua
@@ -62,20 +62,24 @@ local lualine_def_styles = {
 M.scheme = 'everforest' -- specifies scheme. default is "everforest"
 
 -- specifies line style
-M.lualine_style_left = ''
-M.lualine_style_right = ''
+-- M.lualine_style_left = ''
+-- M.lualine_style_right = ''
+M.lualine_style_left = ''
+M.lualine_style_right = ''
 
 -- specifies line seperator style
-M.lualine_seperator_left = ''
-M.lualine_seperator_right = ''
+-- M.lualine_seperator_left = ''
+-- M.lualine_seperator_right = ''
+M.lualine_seperator_left = '│'
+M.lualine_seperator_right = '│'
 
 -- tabline styles
 M.tabline_style_left = ''
-M.tabline_style_right = ''
+M.tabline_style_right = ''
 
 -- tabline seperator
 M.tabline_seperator_left = ''
-M.tabline_seperator_right = ''
+M.tabline_seperator_right = ''
 
 -- if the scheme bundled with lualine?
 -- used in config/plug/lualine.lua
diff --git a/lua/options.lua b/lua/options.lua
index 9cd636e..df3189c 100644
--- a/lua/options.lua
+++ b/lua/options.lua
@@ -10,7 +10,7 @@ local g = vim.g
 local o = vim.o
 
 cmd('syntax enable') 	-- syntax highlighting
-o.rnu = true         	-- relative line numbers
+o.rnu = false         	-- relative line numbers
 o.nu = true         	-- line numbers
 o.mouse = 'a'       	-- mouse controls
 o.cursorline = true 	-- highlight line cursor is in
@@ -25,11 +25,10 @@ opt.ignorecase = true
 opt.scrolloff = 8   	-- buffer starts scrolling 8 lines from the end of view
 opt.incsearch = true
 
-
 -- Tab settings
 o.tabstop = 4 			-- 4 tabstop
 o.shiftwidth = 4
-o.expandtab = false    	-- tabs -> spaces
+o.expandtab = true     	-- tabs -> spaces
 o.smartindent = true    -- nice indenting
 
 o.foldmethod = 'marker' -- set fold method to marker
diff --git a/lua/plug.lua b/lua/plug.lua
index 050e6c2..2c23912 100644
--- a/lua/plug.lua
+++ b/lua/plug.lua
@@ -8,6 +8,9 @@ require('packer').startup({
 		use('neovim/nvim-lspconfig')
 		use('onsails/lspkind-nvim')
 
+        -- java lsp
+        use('mfussenegger/nvim-jdtls')
+
 		-- autocompletion
 		use({
 			'hrsh7th/nvim-cmp',
@@ -18,6 +21,8 @@ require('packer').startup({
 			},
 		})
 
+        use({ "petertriho/cmp-git", requires = "nvim-lua/plenary.nvim" })
+
 		-- snippets
 		use('sirver/ultisnips')
 		use('quangnguyen30192/cmp-nvim-ultisnips')
@@ -35,12 +40,16 @@ require('packer').startup({
 		use('sbdchd/neoformat')
 		use('phaazon/hop.nvim')
 		use({ 'lewis6991/gitsigns.nvim', requires = { 'nvim-lua/plenary.nvim' } })
+        use('liuchengxu/vim-which-key')
+        use('jghauser/mkdir.nvim')
+        use({ 'ellisonleao/glow.nvim', branch = 'main'} )
 		-- }}}
 
-		-- {{{ imporved syntax plugins
+        -- {{{ improved syntax plugins
 		-- these add in a bit more bling and flair to nvim
 		use({ 'nvim-treesitter/nvim-treesitter', run = ':TSUpdate' })
 		use({ 'glepnir/dashboard-nvim', disable = false })
+        use({'rrethy/vim-hexokinase', run = 'make hexokinase'})
 		use('norcalli/nvim-colorizer.lua')
 		-- }}}
 
@@ -57,7 +66,10 @@ require('packer').startup({
 		use('relastle/bluewery.vim')
 		use('haishanh/night-owl.vim')
 		-- }}}
-		--
+
+        -- {{{
+        use('andweeb/presence.nvim')
+        -- }}}
 	end,
 	-- display packer dialouge in the center in a floating window
 	config = {
diff --git a/lua/themes/lualine/everforest.lua b/lua/themes/lualine/everforest.lua
index 4b099de..0b98f75 100644
--- a/lua/themes/lualine/everforest.lua
+++ b/lua/themes/lualine/everforest.lua
@@ -4,13 +4,13 @@
 local colors = {
 	base_fg = '#2F383E',
 	light_fg = '#9DA9A0',
-	secondary = '#3A454A',
-	background = '#445055',
+    secondary = '#445055',
+	background = '#384348',
 	norm_bg = '#A7C080',
-	ins_bg = '#E67E80',
+	ins_bg = '#7FBBB3',
 	vis_bg = '#D699B6',
-	rep_bg = '#E69875',
-	cmd_bg = '#E69875',
+	rep_bg = '#E68E80',
+	cmd_bg = '#83C092',
 	int_bg = '#282C34',
 }
 --LuaFormatter on
